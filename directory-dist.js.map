{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","enter","enterActive","exit","exitActive","Filters","titles","window","LMDirectory","updateName","evt","updateFormState","target","value","updateTitle","updateIntern","checked","resetFilters","currentName","currentTitle","key","display","isIntern","Directory","state","bind","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  \"use strict\";\n\n  function Person(props) {\n    return (\n      <div className=\"person\">\n        <h3>\n          {props.person.name}, {props.person.title}\n        </h3>\n\n        <p>\n          <img\n            className=\"size-medium alignright\"\n            src={props.person.img}\n            alt={props.person.name}\n            width=\"300\"\n            height=\"300\"\n            sizes=\"(max-width: 300px) 100vw, 300px\"\n          />\n\n          {props.person.bio}\n        </p>\n      </div>\n    );\n  }\n\n  function People(props) {\n    return (\n      <div className=\"results\">\n      <ReactTransitionGroup.TransitionGroup>\n        {props.people.map(function(person) {\n          return (\n            <ReactTransitionGroup.CSSTransition \n              key={person.id} \n              classNames={{\n                enter: \"animated\",\n                enterActive: \"zoomIn\",\n                exit: \"animated\",\n                exitActive: \"zoomOut\"\n              }} \n              timeout={1000}\n            >\n              <Person person={person} />\n            </ReactTransitionGroup.CSSTransition>\n          );\n        })}\n        </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  function Filters(props) {\n    let titles = window.LMDirectory.titles;\n\n    function updateName(evt) {\n      props.updateFormState(\"currentName\", evt.target.value);\n    }\n\n    function updateTitle(evt) {\n      props.updateFormState(\"currentTitle\", evt.target.value);\n    }\n\n    function updateIntern(evt) {\n      props.updateFormState(\"isIntern\", evt.target.checked);\n    }\n\n    function resetFilters() {\n      props.updateFormState(\"currentName\", \"\");\n      props.updateFormState(\"currentTitle\", \"\");\n      props.updateFormState(\"isIntern\", false);\n    }\n\n    return (\n      <form action=\"\" id=\"directory-filters\">\n        <div className=\"group\">\n          <label htmlFor=\"person-name\">Name:</label>\n          <input \n            type=\"text\" \n            name=\"person_name\" \n            placeholder=\"Name of employee\" \n            id=\"txt-name\" \n            value={props.currentName}\n            onChange={updateName} \n          />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"person-title\">Job Title:</label>\n          <select \n            name=\"person_title\" \n            id=\"person-title\" \n            value={props.currentTitle} \n            onChange={updateTitle}\n          >\n              <option value=\"\">- Select -</option>\n              {titles.map(function (title) {\n                return (<option value={title.key} key={title.key}>{title.display}</option>);\n              })}\n          </select>\n        </div>\n        <div className=\"group\">\n          <label><input \n            type=\"checkbox\" \n            value=\"1\" \n            name=\"person_intern\" \n            checked={props.isIntern} \n            onChange={updateIntern} \n          /> Intern</label>\n        </div>\n        <div className=\"group\"><button onClick={resetFilters}>reset</button></div>\n\t\t\t</form>\n    );\n  }\n\n  class Directory extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      };\n\n      this.updateFormState = this.updateFormState.bind(this);\n    }\n\n    updateFormState(name, value) {\n      this.setState({\n        [name]: value\n      }, this.updatePeopleList);\n    }\n\n    updatePeopleList() {\n      let filteredPeople = window.LMDirectory.people.filter(\n        function(person) {\n          return (\n            person.intern == this.state.isIntern && (this.state.currentName === \"\" || person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !== -1) && (this.state.currentTitle === \"\" || person.title_cat === this.state.currentTitle)\n          );\n        }.bind(this)\n      );\n\n      this.setState({ people: filteredPeople });\n    }\n\n    render() {\n      return (\n        <div className=\"company-directory\">\n          <h2>Company Directory</h2>\n          <p>Learn more about each person at Leaf & Mortar in this company directory.</p>\n\n          <Filters \n            currentName={this.state.currentName} \n            currentTitle={this.state.currentTitle} \n            isIntern={this.state.isIntern} \n            updateFormState={this.updateFormState} \n          />\n\n          <People people={this.state.people} />\n        </div>\n      );\n    }\n  }\n\n  ReactDOM.render(<Directory />, document.getElementById(\"directory-root\"));\n})();\n"]}